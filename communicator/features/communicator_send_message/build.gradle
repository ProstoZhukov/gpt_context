apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
apply plugin: 'submodule-cfg-plugin'

submoduleConfig { cfg ->
    cfg.enableBaseModuleCfg()
    cfg.enableFlavorsCfg()
    cfg.enableDataBindingCfg()
    cfg.enableBuildConfigGeneration()
}

android {
    namespace "ru.tensor.sbis.communicator.send_message"

    defaultConfig {
        vectorDrawables.useSupportLibrary = true
        consumerProguardFiles 'proguard-rules.pro'
    }

    buildTypes {
        debug {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {

    implementation project(':attachments-decl')
    implementation project(':common')
    implementation project(':communicator_common')
    implementation project(':communicator_declaration')
    implementation project(':communicator_design')
    implementation project(':controller')
    implementation project(':design')
    implementation project(':design_logo')
    implementation project(':design_utils')
    implementation project(':message_panel')
    implementation project(':push-notification')

    // Other libs

    implementation "androidx.work:work-runtime-ktx:$rootProject.ext.workManagerVersion"
    implementation "com.jakewharton.timber:timber:$rootProject.ext.timberVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-rx2:$rootProject.ext.kotlinxCoroutinesCoreVersion"

    // Dagger
    implementation "com.google.dagger:dagger:$rootProject.ext.daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$rootProject.ext.daggerVersion"
}