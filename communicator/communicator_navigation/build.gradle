apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'
apply plugin: 'submodule-cfg-plugin'

submoduleConfig { cfg ->
    cfg.enableBaseModuleCfg()
    cfg.enableFlavorsCfg()
    cfg.enableDataBindingCfg()
    cfg.enableBuildConfigGeneration()
    if (rootProject.ext.ciBuild) {
        cfg.enableJacocoCfg()
    }
}

android {
    namespace "ru.tensor.sbis.communicator.communicator_navigation"

    defaultConfig {
        vectorDrawables.useSupportLibrary = true
        consumerProguardFiles 'proguard-rules.pro'
    }

    buildTypes {
        debug {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField "boolean", "MOCK_FUNCTIONS_ENABLED", "false"
        }
        release {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField "boolean", "MOCK_FUNCTIONS_ENABLED", "false"
        }
    }
}

dependencies {
    implementation project(':controller')
    implementation project(':communicator_common')
    implementation project(':communicator_dialog_selection')
    implementation project(':communicator_core')
    implementation project(':communicator_declaration')
    implementation project(':contacts_declaration')
    implementation project(':employees_declaration')
    implementation project(':design')
    implementation project(':common')
    implementation project(':design_dialogs')
    implementation project(':design_profile')
    implementation project(':deeplink')
    implementation project(':tasks-feature')
    implementation project(':verification-decl')
    implementation project(':calendar-decl')
    implementation project(':communication-decl')
    implementation project(':edo-decl')
    implementation project(':design_notification')

    //other libs
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
}