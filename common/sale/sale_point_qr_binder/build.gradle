import ru.tensor.gradle.subconfig.ktlint.KtLintConfig

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'submodule-cfg-plugin'

submoduleConfig { cfg ->
    cfg.enableBaseModuleCfg()
    cfg.enableOptimizeCodeCfg()
    cfg.enableViewBindingCfg()
    cfg.enableLintCfg()
    cfg.enableKtLintCfg(KtLintConfig.KOTLIN_1_8_0)
    cfg.enableBuildConfigGeneration()
}

ktlint {
    baseline = file("config/ktlint/baseline.xml")
    filter {
        exclude("**/generated/**")
    }
}

android {
    resourcePrefix "spqrb_"

    defaultConfig {
        namespace "ru.tensor.sbis.sale_point_qr_binder"
    }

    lintOptions {
        baseline project.file("config/androidLint/baseline.xml")
        disable 'GradleDependency', 'TrustAllX509TrustManager'
        abortOnError true
    }
}

dependencies {
    api project(':plugin_struct')

    implementation project(':barcode-decl')
    implementation project(':push-notification')
    implementation project(':base_components')
    implementation project(':android-ext-decl') {
        "Нужно для BaseActivity. FIXME https://online.sbis.ru/opendoc.html?guid=7a2ac4e4-3a65-47b8-b206-f40ceec0ba57&client=3"
    }
    implementation project(':toolbox-decl')
    implementation project(':mvi_extension')
    implementation project(':network_native')
    implementation project(':design_progress')
    implementation project(':design_confirmation_dialog')
    implementation project(':info-decl') {
        "Нужно для NotificationType. FIXME https://online.sbis.ru/opendoc.html?guid=7a2ac4e4-3a65-47b8-b206-f40ceec0ba57&client=3"
    }
    implementation project(':design_buttons') {
        "Нужно для ConfirmationDialog. FIXME https://online.sbis.ru/opendoc.html?guid=7a2ac4e4-3a65-47b8-b206-f40ceec0ba57&client=3"
    }

    implementation "androidx.annotation:annotation:$rootProject.ext.annotationVersion"
}

project.tasks.register("checkOnMR") { task ->
    task.group("verification")

    def ktLintTask = task.project.tasks.getByName("ktlintCheck")
    task.dependsOn(ktLintTask)

    def androidLintTask = task.project.tasks.getByName("lintDebug")
    task.dependsOn(androidLintTask)
}