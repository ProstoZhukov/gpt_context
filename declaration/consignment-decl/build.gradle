import ru.tensor.gradle.subconfig.ktlint.KtLintConfig

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'

apply plugin: 'submodule-cfg-plugin'

submoduleConfig { cfg ->
    cfg.enableBaseModuleCfg()
    cfg.enableFlavorsCfg()
    cfg.enableLintCfg()
    cfg.enableKtLintCfg(KtLintConfig.KOTLIN_1_8_0)
    if (rootProject.ext.ciBuild) {
        cfg.enableJacocoCfg()
    }
}

android {
    namespace "ru.tensor.sbis.consignment_decl"

    buildTypes {
        debug {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    resourcePrefix 'consign_decl_'

    lintOptions {
        baseline project.file("config/androidLint/baseline.xml")
        disable 'GradleDependency', 'TrustAllX509TrustManager'
        abortOnError true
    }
}

project.tasks.register("checkOnMR") { task ->
    task.group("verification")

    def ktLintTask = project.tasks.getByName("ktlintCheck")
    task.dependsOn(ktLintTask)

    def lintTask = project.tasks.getByName("lintDebug")
    task.dependsOn(lintTask)
}

dependencies {
    api project(':plugin_struct')
    api project(':android-ext-decl')
    api project(':list')
    api project(':crud3')
    api project(":input_view")

    api "androidx.annotation:annotation:$rootProject.ext.annotationVersion"
    api "androidx.appcompat:appcompat:$rootProject.ext.appCompatVersion"
    api "androidx.fragment:fragment-ktx:$rootProject.ext.fragmentVersion"
    api "androidx.lifecycle:lifecycle-livedata:$rootProject.ext.androidArchLifecycle"
    api "androidx.lifecycle:lifecycle-viewmodel:$rootProject.ext.androidArchLifecycle"
    api "androidx.lifecycle:lifecycle-common-java8:$rootProject.ext.androidLifecycleCommon"
    api "androidx.savedstate:savedstate:$rootProject.ext.savedStateVersion"
    api "androidx.recyclerview:recyclerview:$rootProject.ext.recyclerViewVersion"
}