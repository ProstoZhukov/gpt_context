apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'
apply plugin: 'submodule-cfg-plugin'

submoduleConfig { cfg ->
    cfg.enableBaseModuleCfg()
    cfg.enableFlavorsCfg()
    cfg.enableDataBindingCfg()
    cfg.enableDeprecatedFieldsCfg()
    cfg.enableBuildConfigGeneration()
    cfg.enableLintCfg()
    cfg.enableKtLintCfg()
    if (rootProject.ext.ciBuild) {
        cfg.enableJacocoCfg()
    }
}

android {
    namespace "ru.tensor.sbis.design"

    defaultConfig {
        vectorDrawables.useSupportLibrary = true
    }

    buildFeatures {
        viewBinding true
    }

    sourceSets {
        main {
            res.srcDirs += ['src/main/res_theme']
            res.srcDirs += ['src/main/feature_res_theme']
        }
    }
}

dependencies {
    api libs.android.view.material
    api libs.android.view.layout.flexboxLayout
    api libs.rx.binding
    api libs.timber
    api libs.android.view.iconics.core
    api libs.android.view.iconics.views
    api libs.apache.common.lang3

    // AndroidX
    api libs.android.core.ktx
    api libs.android.appcompat
    api libs.android.lifecycle.viewmodel.ktx
    api libs.android.lifecycle.livedata.ktx
    api libs.android.legacy.preference
    api libs.android.view.recyclerView
    api libs.android.view.cardView
    api libs.android.view.layout.percentLayout
    api libs.android.view.layout.drawerLayout
    api libs.android.view.layout.swiperefreshLayout
    api libs.android.view.layout.constraintLayout

    // Fresco image loading
    api libs.android.view.fresco
    api libs.android.view.fresco.animated.gif
    api libs.android.view.fresco.imagepipeline.okhttp3
}